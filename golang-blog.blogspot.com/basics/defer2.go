/*
Отложенные вызовы функций сохраняются в стеке.

Когда происходит возврат из функции,
ее отложенные вызовы выполняются в порядке "последним-пришел-первым-вышел" (LIFO, last-in-first-out).
*/

package main

import "fmt"

func main() {
	fmt.Println("Подсчет...")

	for i := 0; i < 10; i++ {
		defer fmt.Println(i) //итерация будет проходить по возрастанию(0,1,2,3,...), но отложенные вызовы будут выводиться в обратном порядке (9,8,7,6,...)
	}

	fmt.Println("выполнен")
}
